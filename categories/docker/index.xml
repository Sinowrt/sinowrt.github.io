<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Sinowrt</title>
    <link>http://blog.sinowrt.cn/categories/docker/</link>
    <description>Recent content in docker on Sinowrt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Dec 2020 22:02:00 +0800</lastBuildDate>
    
	<atom:link href="http://blog.sinowrt.cn/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用docker安装 aria2&#43;ariaNg&#43;filemanager</title>
      <link>http://blog.sinowrt.cn/2020/2020-12-02-t1430-instruction-of-installing-aria2-with-ariang-in-docker/</link>
      <pubDate>Tue, 01 Dec 2020 22:02:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-12-02-t1430-instruction-of-installing-aria2-with-ariang-in-docker/</guid>
      <description>0x00 序 本次安装分别在绿云东京1T大盘鸡以及Servarica 2T大盘鸡上面进行
两台机都安装了Centos7的系统，因此本次教程主要讲述如何在CentOS7上安装docker，并在docker中部署包含了aria2+ariaNg+filemanager等服务的容器
0x01 安装过程 以下过程均在root权限下进行操作
1.首先更新源 yum update  2.安装docker yum -y install docker  3.启动docker并添加到开机自启动 systemctl start docker.service systemctl enable docker.service  4.新建一个文件夹，用于映射到docker中的下载文件夹 docker run --name ccaa -d -p 6800:6800 -p 6080:6080 -v /mnt/download:/Down moerats/ccaa:latest  至此，可以使用以下信息访问AriaNG并登录操作了
#大致信息如下 AriaNg界面：http://ip:6080 访问界面用户名密码分别为：admin、moerats Aria2密匙：moerats Filebrowser访问地址：http://ip:6080/admin，也可以通过AriaNg界面上方的文件管理按钮进入  0x02 遇到的问题 1.若AriaNG的Web界面进不去，就需要开启防火墙 # 仅限CentOS7 firewall-cmd --zone=public --add-port=6080/tcp --permanent firewall-cmd --zone=public --add-port=6800/tcp --permanent firewall-cmd --reload  2.若AriaNG中Aria2 Status为Disconnected，并且单击显示Authorization Failed的Error，如图 则需要</description>
    </item>
    
    <item>
      <title>记一次生产环境 日期查询错误</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-21t1011-date-query-error-in-product-environment/</link>
      <pubDate>Tue, 21 Apr 2020 10:11:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-21t1011-date-query-error-in-product-environment/</guid>
      <description>如图
想查询4月1日到21日的记录，可是却连着3月31日的记录都查到了
到后端查看日志，显示查询开始日期为31日16时，那么基本断定是时区出了问题
那么有几种可能，一是系统时区，一是数据库时区，三是docker容器内部的时区
第一步，date -R查看系统时区输出Tue, 21 Apr 2020 09:31:18 +0800,东八区，没问题
那么第二步，查看数据库时区，登录mysql，show variables like &amp;quot;%time_zone%&amp;quot;;
mysql&amp;gt; show variables like &amp;quot;%time_zone%&amp;quot;; +------------------+--------+ | Variable_name | Value | +------------------+--------+ | system_time_zone | UTC | | time_zone | SYSTEM | +------------------+--------+ 2 rows in set (0.01 sec)  跟随系统，也没问题，需要注意的是，如果mysql是部署在docker中的话，就要进入容器内部更改容器内部的时区了
保守起见，可以指定mysql的时区
set global time_zone = &#39;+8:00&#39;; set time_zone = &#39;+8:00&#39;; set time_zone = &#39;+8:00&#39;;  再次查看mysql时区，已经改变了
mysql&amp;gt; show variables like &amp;quot;%time_zone%&amp;quot;; +------------------+--------+ | Variable_name | Value | +------------------+--------+ | system_time_zone | UTC | | time_zone | +08:00 | +------------------+--------+ 2 rows in set (0.</description>
    </item>
    
    <item>
      <title>docker save 和 export 命令的区别</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-20t1611-the-differences-of-docker-command-save-and-export/</link>
      <pubDate>Mon, 20 Apr 2020 16:11:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-20t1611-the-differences-of-docker-command-save-and-export/</guid>
      <description>在一次生产环境 docker 微服务更新 中 深刻意识到docker save 和 export 的区别
0x00 背景 上次使用虚拟机镜像部署了三个子系统，但是测试过程中还是发现了不少问题，所以这次需要过去更新几个微服务
于是就在公司虚拟机里面用export命令把几个容器导出来，放到生产环境中再import进去，然后run，结果死活运行不起来，提示run缺少参数。为了防止这种情况，我还把公司测试环境中的完整的容器启动命令都拍了下来，然后尝试构造命令，没有参数是吧，我用inspect命令把参数都找出来。接下来参数是不缺了，就是提示在工作目录中找不到文件。
0x01 分析： 在公司里面的容器，我是直接通过2375端口直接上传到docker镜像库的，在上传完毕后，还会执行dockerfile里面的命令，其中包含创建工作目录等命令。但是我将容器导入生产环境后，似乎是因为没有运行这些命令而造成找不到文件。
那么就可以推理出，我只是将docker的容器导出来了，但是容器里面的数据却没有导出。
怎样才能连同数据一起导出呢，那么就要用到save命令而不是export命令了。
0x02 解决： 最后只能让同事再帮忙将这几个微服务的容器重新导出一下
然后我这边再使用load命令将容器加载为镜像，微服务才得以成功更新。</description>
    </item>
    
    <item>
      <title>宿主机转发未开启导致无法访问docker内部网络</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-17t1702-can-not-access-the-nacos-service-in-docker-container/</link>
      <pubDate>Fri, 17 Apr 2020 17:02:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-17t1702-can-not-access-the-nacos-service-in-docker-container/</guid>
      <description>今天迁移了虚拟机之后，准备上nacos改一下配置，可是登录http://...:8848/nacos却连接超时，telnet一下也不通，于是上部署了nacos的docker容器的宿主机上，curl http://docker内网ip:8848/nacos 却是有返回数据的，那就确定应该是转发出了问题，
sysctl -a | grep net.ipv4.ip_forward
显示
net.ipv4.ip_forward = 0
原来是转发没开启，于是
echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
sysctl -p 重新加载内核参数
再telnet一下，通了搞定
上http://...:8848/nacos进行配置就行了</description>
    </item>
    
    <item>
      <title>docker容器迁移</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-16t1623-migrate-the-container-to-another-docker/</link>
      <pubDate>Thu, 16 Apr 2020 16:23:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-16t1623-migrate-the-container-to-another-docker/</guid>
      <description>在项目部署的时候，本来是部署两个esxi虚拟机，但是在部署测试过程中发现对象存储服务依赖了另一个虚拟机的minio服务，由于该虚拟机的minio服务是部署在docker上的，所以打算将该容器迁移到要部署的其中一个虚拟机的docker中
步骤：
1. 导出容器 docker export 容器ID &amp;gt;minio.tar
2. 将导出minio.tar放到要部署的虚拟机上面
3. 将该容器导入镜像docker import minio.tar minio/minio:lastest
4. 新建容器并启动镜像
docker run -d -p 9000:9000 --name minio -d -e &amp;quot;MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE&amp;quot; -e &amp;quot;MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&amp;quot; -v /mnt/data:/data -v /mnt/config:/root/.minio minio/minio:lastest /usr/bin/docker-entrypoint.sh server /data  启动命令可以在原宿主机上使用docker inspect 容器ID查看，并根据需求调整启动参数
至此，容器的迁移工作顺利完成。</description>
    </item>
    
    <item>
      <title>群晖docker与移动网络的恩怨情仇</title>
      <link>http://blog.sinowrt.cn/2019/2019-08-05t1747-the-fucking-china-mobile/</link>
      <pubDate>Mon, 05 Aug 2019 17:47:08 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2019/2019-08-05t1747-the-fucking-china-mobile/</guid>
      <description> 0x00 起因  舍友淘汰了一台笔记本电脑，被水泡了，也经过我的手修过，最后硬盘还是回天乏术。毕业了，也就扔给我了，由于手头上没有多余的硬盘，于是拆掉了群晖上的120G的东芝硬盘安上去。但是在转移资料的时候，只转移了盘内的文件，没有留意到群晖的package也需要转移。就这样，配置好在docker上的aria2也GG了。群晖没有了离线下载，就如烧烤没有孜然，失去了灵魂。 学校上个月换了运营商，换成了稀巴烂的移动网。 今天恰好有空，就重装一下aria2。  0x01 经过  docker安装挺顺利的，接下来就找一下aria2的镜像呗，输入aria2查找了半天，却弹了个failed to query registry的提示出来。我寻思着，是不是注册表源失效了，换成阿里云的源，结果直接not found。 这就奇怪了，以前安装的时候一切挺顺利的，没遇到过这种情况。于是google了一番，有让改dns的，改了n多个也没见效果。后来发现挺多回帖说是移动网的问题，用代理下吧，newifi3刚拿回来还没空刷机，刷完机还得配梯子，也挺折腾的。 我的网络是中继了学校的wifi过来的，于是我用手机开了个wifi，那就中继手机吧。试了一下，果然是移动网的问题，这个问题也就结了。  0x02 总结  移动网垃圾！  </description>
    </item>
    
  </channel>
</rss>