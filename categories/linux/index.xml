<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Sinowrt</title>
    <link>http://blog.sinowrt.cn/categories/linux/</link>
    <description>Recent content in Linux on Sinowrt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Oct 2018 02:56:07 +0000</lastBuildDate>
    
	<atom:link href="http://blog.sinowrt.cn/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>newifi mini安装drcom全攻略</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-19t0256-drcom-setup-of-newifi_mini/</link>
      <pubDate>Fri, 19 Oct 2018 02:56:07 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-19t0256-drcom-setup-of-newifi_mini/</guid>
      <description>起始条件：  刷入breed的newifi mini一台 网线一根  后续部署  刷入pandorabox r355固件 配置无线名、密码 在/etc/opkg.conf后追加  arch all 100 arch ramips_24kec 200 arch ramips 300  离线安装python环境  分别下载  libgcc_4.8-linaro-1_ramips_24kec.ipk libc_0.9.33.2-1_ramips_24kec.ipk libpthread_0.9.33.2-1_ramips_24kec.ipk zlib_1.2.8-1_ramips_24kec.ipk libffi_3.0.13-1_ramips_24kec.ipk python-mini_2.7.3-2_ramips_24kec.ipk   将上述ipk放到tmp目录下 依次安装 安装完毕可以在putty中输入 python 以检验是否安装成功  安装drcom客户端  将drcom客户端的python脚本放入/usr/bin中（注意，此脚本为改动后的命令行脚本），将权限改为0755 输入python /usr/bin/drcom -u 你的账号 -p 你的密码，回车，在浏览器验证是否能成功登录上网  安装drcom_client可视化配置界面  复制drcom(etc_config)到括号中的路径，并去掉括号以及括号中的路径 复制drcom.lua(usr_lib_lua_luci_controller)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 复制drcom.lua(usr_lib_lua_luci_model_cbi)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 复制drcom.lua(usr-lib-lua-luci-model-cbi-admin_services)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 复制drcom_client(etc_init.d)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 重启路由  配置drcom_client  进入luci管理界面 在服务中找到drcom_client单击进入 填入drcom的账号和密码 save&amp;amp;apply 打开浏览器打开任意网页验证是否登录成功  配置自启动  在/etc/hotplut.</description>
    </item>
    
    <item>
      <title>init.d 的 脚本中使用 kill 的怪事</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-17t0552-init.dkill/</link>
      <pubDate>Wed, 17 Oct 2018 05:52:17 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-17t0552-init.dkill/</guid>
      <description>2018.08.20 使用自动安装drcom的shell脚本之后，打开配置界面，进行认证之后，想起昨晚有那么一瞬间发现，在drcom的luci界面配置以及apply之后，ps -w会出现两条python drcom的进程，于是再次打开putty查看，果然不出所料，于是就有了这篇文章 #!/bin/sh /etc/rc.common run_drcom() { local username local password config_get username $1 username config_get password $1 password python /usr/bin/drcom -u $username -p $password &amp;amp; } start() { config_load drcom config_foreach run_drcom login } stop() { ps w | grep &amp;quot;.*drcom.*&amp;quot; | grep -v &#39;grep&#39; | cut -c 2-5 | xargs kill -9 echo &amp;quot;Drcom Client for GDUFE has stoped.&amp;quot; }   大二的时候，在写了drcom的luci界面之后，发现有时候使用drcom_client的stop命令会不奏效，经过查看代码，发现问题应该出在cut -c 2-5上
for example cut -c 2-5 是截取了第二到第五位的字符串 即4位pid 若pid大于4位之后便不再好使  我有印象当时已经改正了，这次出现的 drcom_client 脚本，便是原原本本的当年的模样，至于为什么会这样，可能当时我只改了路由器上的脚本，而没有更新本地脚本</description>
    </item>
    
    <item>
      <title>ubuntu 16.04部署ss</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-16t1040-ubuntu/</link>
      <pubDate>Tue, 16 Oct 2018 10:40:36 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-16t1040-ubuntu/</guid>
      <description> 2018/04/06  准备部署亚马逊云的ss服务端，无意中看到有一张8刀的未付账单 经过查看账单详情，发现美国的俄亥俄州的服务器还没关闭，导致东京和美国的服务器同时开启，当然超出了亚马逊云的免费范围，所以对于国外的云服务器还是要定时上去查看一下，以防意外扣费的发生
 本篇主要是对ubuntu 16.04上部署ss服务端进行记录的的过程
  准备工作  利用putty的puttygen对亚马逊云派发的秘钥文件*.pem转换为putty能识别的ppk文件 启动putty，在ssh的auth中浏览文件夹选中刚才转换出来的ppk文件 填写服务器地址以及默认用户名ubuntu@ip地址 填写ssh端口22 若要进行ping检测，则需要在安全组中添加icmp入站规则 对该配置进行保存以便日后维护  正式部署  首先在终端输入sudo apt-get update 更新源 接着安装pip3，输入sudo apt install python3-pip 安装ss，输入sudo pip3 install shadowsocks 配置ss，输入sudo vi /etc/shadowsocks 在vi中输入ss的配置如下所示：  { &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;, &amp;quot;server_port&amp;quot;:444, &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;, &amp;quot;local_port&amp;quot;:1080, &amp;quot;password&amp;quot;:&amp;quot;mypasswd&amp;quot;, &amp;quot;timeout&amp;quot;:300, &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;, &amp;quot;fast_open&amp;quot;:false }  保存退出
 如果ss不是安装在/usr/bin或/usr/local/bin,要先查看ss的路径，输入whereis ssserver（故建议在安装ss前先cd /usr/bin）
 将查询到的路径复制，输入sudo vi /etc/sudoers，粘贴到secure_path后面，以冒号分隔强制保存退出即可
 最后输入sudo ssserver -c /etc/shadowsocks.json -d start &amp;amp;启动ss 服务即可用客户端进行连接
  </description>
    </item>
    
  </channel>
</rss>