<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sinowrt</title>
    <link>http://blog.sinowrt.cn/posts/</link>
    <description>Recent content in Posts on Sinowrt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Oct 2019 12:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://blog.sinowrt.cn/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记多益面试</title>
      <link>http://blog.sinowrt.cn/2019/2019-10-31t1200-dy-interview/</link>
      <pubDate>Thu, 31 Oct 2019 12:00:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2019/2019-10-31t1200-dy-interview/</guid>
      <description>0x00 面试通知  自从笔试通过后被晾了差不多半个月，30号晚突然收到多益的面试通知，面试时间为31号早上11:40，woc这么快，赶紧吃了饭回来准备一下  0x01 面试过程  早上九点多，hr突然打电话过来说面试提前到了10点，我赶紧登陆了战盟，发送了面试确认 大概10:19，面试官通知面试，但是战盟不识别摄像头，改为qq视频 面试开始了，整个过程持续了整整有30分钟，问题（不完整）整理了一下，贴在下面   自我介绍 做过什么项目，觉得特别有成就感的是哪个，用了什么技术，有没有做过web服务端项目，用了什么技术？ 有没有做过什么项目使用了缓存机制的？ 谈谈对消息队列的理解 堆和栈的区别，哪个快些？ 引用类型和值类型的概念与区别？ 接口和抽象类的区别？为什么使用接口和抽象类？ 进程与线程？ 使用线程的优点是什么？在什么情况下使用？ 手机APP消息推送的机制？ 有没有使用过Redis或MongoDB？ TCP三次握手，四次挥手？为什么要三次握手？服务器断开与客户端断开有什么区别？ 使用过什么中间件？ 对事务的理解？ 非关系型数据库与关系型数据库的区别？ MySql中，select * from table where field=null 为什么无法匹配空值？ varchar 与 char 的区别，哪个比较长，varchar(32)代表什么？ cookie与session的区别，通过什么将cookie与session进行匹配？ 如何在多线程中共享变量？ Web中有哪些漏洞攻击方法需要防范？ 对加班的看法？ 最近了解什么新技术？ 编程题：实现一个函数, 输入两个版本号（随机输入二位到四位），比较两个版本号的大小。 输入示例： 1.2.1 1.10.2.0
public static int comp(String a,String b) { String[] k=a.split(&amp;quot;\\.&amp;quot;); String[] g=b.split(&amp;quot;\\.&amp;quot;); int min=k.length&amp;gt;g.length?g.length:k.length; for(int i=0;i&amp;lt;min;i++) { int kn=Integer.parseInt(k[i]); int gn=Integer.parseInt(g[i]); if(kn!</description>
    </item>
    
    <item>
      <title>中兴W815N V3 500mw网桥改ubnt</title>
      <link>http://blog.sinowrt.cn/2019/2019-09-08t1559-zte-w815n-refitting/</link>
      <pubDate>Sun, 08 Sep 2019 15:59:08 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2019/2019-09-08t1559-zte-w815n-refitting/</guid>
      <description> 0x00 状况描述  毕业租房子后，一直在整网络。因为是出租屋，想着租一年就搬了，就把学校的热点桥接过来将就着用就算了。这两个月，桥接用过newifi mini，TP的340G+，信号一直不理想，就想着搞个正版ubnt。看着看着，就觉得吧，这个ubnt的水也深，也不便宜，看到无线论坛上有坛友说用运营级别的大功率网桥，深入了解，其中还真的不乏好设备。看过烽火2400、中兴W815，想着大品牌折腾的人应该不少，最后入手了中兴W815。  0x01 设备描述  中兴W815拥有双功放，无线功率最高可达500mw，基于7240+9283方案，改ubnt的教程也不少，但是资料较为零散，需要取百家所长。  0x02 改装过程  首先是备份原厂固件，用风枪将flash取下，焊到编程器上面，我用的是ch341普通的绿板编程器，备份过程挺久的，毕竟固件有16m。 固件备份完成后，直接擦除芯片，将breed写入flash，我用的是h大的将gpio12作为reset键的版本breed-ar724x-reset12-r1163.bin，烧录好就将flash焊回去。 烧好breed，就要改reset键了。这里参考的是坛友的改装方案 用漆包线将7240的第89脚用漆包线引出，焊到空车位上，在旁边补上10k上拉电阻  翻到后面同样用漆包线引到直连reset键的C70电容右脚。  很奇怪，我按照坛友的方法改好后，开机却一直重启。用万用表测量gpio12的对地电压，开机时很稳定的2.5v但是开机完成后马上跳回0.1v，导致机器无限重启。于是我尝试将电阻换为2.2k甚至1k，问题依旧，最后直接不要电阻，将电阻两脚直接点上，没再出现重启的现象。最后还是接上了20欧的电阻，电流能减少一点是一点，开机一切正常。  0x03 提取art  art在原厂固件的最后64KB，直接用winhex备份出来即可  0x04 刷入ubnt固件与art  由于我找不到适用的ubnt固件，最后还是用了坛友的编程器固件，最后刷入art正常使用  0x05 外接天线  由于原机的天线接头比较特别，是N型母头，要和sma接头的八木天线连接，还得买个N型公头转sma外螺内针的转接头  0x06 使用效果  用原机的5dbi天线伸出窗外效果还行，信号在-60db左右，但是这机子不防水啊，常年这样用也不是办法，但是把机子放在室内，再外接八木天线或者6dbi的全向天线效果都不理想！ 总结：翻车了！  </description>
    </item>
    
    <item>
      <title>win10任务栏单程序多窗口无法切换的问题(已解决)</title>
      <link>http://blog.sinowrt.cn/2019/2019-08-10t1544-clicking-windows10-taskbar-preview-notworking/</link>
      <pubDate>Sat, 10 Aug 2019 15:44:08 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2019/2019-08-10t1544-clicking-windows10-taskbar-preview-notworking/</guid>
      <description> 0x00 状况描述  在某应用上面操作一段时间之后，将鼠标悬停在任务栏的某已打开多个窗口的应用程序上面时，其上方的预览窗口一闪而过。需要点击任务栏，使任务栏获得焦点后，再将鼠标悬停在该多窗口应用程序上方，才会显示预览窗口。此时，再将光标悬停在某预览窗口上方，单击，奇迹出现了——该窗口并不会恢复，而是一闪而过，点击之前的桌面是啥样就是啥样。
 正常健康的win10系统，在鼠标悬停在任务栏的应用图标上面，加入该页面打开了多个窗口（如chrome以及windows的资源管理器）图标上方会出现预览窗口，然后鼠标悬停在某个窗口上方并单击即可打开该窗口。
 这是一个间歇性的问题
 这个问题应该在很久之前就出现了，但是一直使用win+tab快捷键能够解决，就一直没当回事
 最近键盘放在一个不太方便的位置，每次需要切换窗口都需要另一只手够到键盘，win+tab切换，才发现问题大条了
  0x01 问题排查过程  上百度搜索 win10 无法切换窗口，发现较多的是2015年的一个bug。对于该bug的描述是————某应用程序打开了多个窗口，若需要从其中一个窗口切换到另一个窗口，需要将当前窗口最小化，需要切换的窗口才能显示在最前端。该问题看似很像我的问题，但是其实不是一回事。于是我继续查找，还有大部分是快捷键alt+tab都不生效的，这个问题似乎已经有了解决方案，只要将注册表中的“AltTabSettings”项修改为1就行了。但是我的问题也不是这样啊，算了还是请出谷歌吧。
 在谷歌上搜索win10 无法切换窗口，发现了挺多在microsoft support上的提问，有好几个类似我的情形，但是得到的回复都是
 1.在启动项中隐藏所有windows自带的服务，把其他服务全部关闭自启动并重启（对我无效）
 2.将系统文件与镜像文件进行对比，检查是否存在缺陷文件，并修复重启（对我无效）
 当然，也有很多大神朋友说是BING输入法或者BING词典的问题，导致焦点丢失，卸载了就好了。（我的系统中也没有折玩意儿啊）
 在microsoft support中发现一个回复挺有意思的，说到国外似乎没有这种情况发生？？？
 于是我推测是不是系统自带的中文输入法有问题，我甚至将系统语言修改为英文，但是问题如故。
 我开始在谷歌上面利用clicking windows10 taskbar preview not working，了解到在外国友人手中的电脑也存在该问题，于是我就放心了，这应该是windows10的一个bug。
 经过众多方法都无果之后，我似乎放弃了，甚至一度想要恢复到win7，但是我并没有备份，当然这也只能是想想了。
 后来我来到了国外版的知乎Reddit中，简简单单地搜索windows10 taskbar期望找到一个同病相怜的“友人”。
 没想到我真的找到了，顿时内牛满面，该网友还用一段youtube的视频完美复现了这种情况，他提到它也到microsoft support上提问过，但是都是得到万金油式的回答（类似重启啊，修改注册表啊。。。），并在最后着重提到他也重装了多次系统，以及另外一个他遇到的bug（在开始菜单中右键也会一闪而过，但这个问题我倒没有遇到过）。唉！是windows的bug石锤了。我的心情有所平复，但是我依旧没有得到一个满意的答案。
 贴出该问题的地址，有兴趣的朋友可以看一下跟你遇到的问题是不是一样鸭！
 在我不死心的时候，我想到会不会是跟我之前安装的SynTPEnh.exe，触摸板辅助软件有关呢。二话不说，先用任务管理器杀掉再说吧。但是十分巧合，我按错按键了，想按ctrl+shift+esc，竟然按了win+r，更巧合的是r也没按出来。这时我就发现，外接键盘的win键按了竟然没弹出开始菜单？？？我反复按，只有极少部分时候会弹出开始菜单的界面。会不会是我的键盘失灵了？我此时又按了一下笔记本自带键盘的win键，发现似乎桌面刷新了一下，开始菜单也出现了。我也顾不上那么多，打开任务管理器把SynTPEnh.exe杀了。此时我再用鼠标悬停到chrome上面，发现竟然好了？？？好了？？？那这到底是跟外接键盘还是SynTPEnh.exe有关呢。于是我利用控制变量法，进行了一系列的实验，发现与谁都无关！！！
 也不能说一无所获吧，我还是找到了解决问题的方法。当问题出现的时候，只要按一下笔记本自带键盘的win键，弹出开始菜单，一切又开始正常工作了。
  更新！！！问题已解决！！！  我私信了Reddit上面的这位友人，询问是否解决了该问题。他回复说，是他的罗技键盘上面的媒体键坏了的原因，把坏的键修复后问题就解决了。此时我突然想起我的笔记本自带键盘上的esc键也坏了，是不是这个原因呢？于是我把自带键盘拆了，问题也迎刃而解！！！然后我实验了一下，按住外接键盘的esc键，再按win键，问题重现了!esc键的锅石锤了！  0x02 总结  windows10 还是会存在一定的小问题，其实也不小了，至少影响到了工作效率嘛。 我甚是想念windows7的稳定，并且强烈建议强迫症患者还是留在win7吧，windows10虽然相对于刚面世时少了很多问题，但是小问题依旧存在。 win7与win10就像心头的朱砂痣与床前明月光，win7稳定而强大，虽然用户界面做的差了点，但是经过多年的沉淀，很多小问题都被发现并被开发者或用户解决了，无论大小问题，在网上都能搜到解决方案。而win10，外观非常惊艳，但是小问题依旧存在，由于面世的时间并不久，很多小问题都没有受到开发者的关注，并且用户也没有摸索到解决方案，导致强迫症患者非常头疼。 一句话总结：macos真香！  总结的话就当我放了个屁吧: ) </description>
    </item>
    
    <item>
      <title>群晖docker与移动网络的恩怨情仇</title>
      <link>http://blog.sinowrt.cn/2019/2019-08-05t1747-the-fucking-china-mobile/</link>
      <pubDate>Mon, 05 Aug 2019 17:47:08 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2019/2019-08-05t1747-the-fucking-china-mobile/</guid>
      <description> 0x00 起因  舍友淘汰了一台笔记本电脑，被水泡了，也经过我的手修过，最后硬盘还是回天乏术。毕业了，也就扔给我了，由于手头上没有多余的硬盘，于是拆掉了群晖上的120G的东芝硬盘安上去。但是在转移资料的时候，只转移了盘内的文件，没有留意到群晖的package也需要转移。就这样，配置好在docker上的aria2也GG了。群晖没有了离线下载，就如烧烤没有孜然，失去了灵魂。 学校上个月换了运营商，换成了稀巴烂的移动网。 今天恰好有空，就重装一下aria2。  0x01 经过  docker安装挺顺利的，接下来就找一下aria2的镜像呗，输入aria2查找了半天，却弹了个failed to query registry的提示出来。我寻思着，是不是注册表源失效了，换成阿里云的源，结果直接not found。 这就奇怪了，以前安装的时候一切挺顺利的，没遇到过这种情况。于是google了一番，有让改dns的，改了n多个也没见效果。后来发现挺多回帖说是移动网的问题，用代理下吧，newifi3刚拿回来还没空刷机，刷完机还得配梯子，也挺折腾的。 我的网络是中继了学校的wifi过来的，于是我用手机开了个wifi，那就中继手机吧。试了一下，果然是移动网的问题，这个问题也就结了。  0x02 总结  移动网垃圾！  </description>
    </item>
    
    <item>
      <title>救救bandwagonhost被禁的IP吧</title>
      <link>http://blog.sinowrt.cn/2019/2019-06-13t1300-how-to-save-the-baned-ip/</link>
      <pubDate>Thu, 13 Jun 2019 13:02:08 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2019/2019-06-13t1300-how-to-save-the-baned-ip/</guid>
      <description>0x00 事件起因  2019年儿童节中午，google搜索超时，ss服务器尚可ping通，但端口连接异常。 13:00 更换端口，仍无法使用，ping检测IP被墙  0x01 解决方案  有消息称等待数天即可解封 等待无果，更换v2ray+cdn+ws代理方案  0x02 bandwagonhost服务器安装v2ray  我的搬瓦工vps是3.99传家宝套餐，64M运行内存，2G磁盘空间，100G流量 需要在kvm面板上安装debian或ubuntu系统 需要注意的是我的vps在安装了debian-8.0-x86_64-minimal后，使用v2ray的官方go.sh脚本安装时，swap空间爆掉了，导致安装意外终止。根据网上的教程调整swap分区无果，于是更换ubuntu-16.04-x86_64系统，安装才得以顺利进行。  环境 临时梯子（用于连接ip被ban的vps） 工具 PuTTy  sudo su 获取root权限 在控制台输入bash &amp;lt;(curl -L -s https://install.direct/go.sh)，此命令主要下载go.sh脚本并运行自动安装 控制台提示V2Ray v4.19.1 is installed.即为安装成功 记下控制台中的PORT和UUID的值  配置v2ray服务端  v2ray使用脚本安装完成后，默认启动服务就可以使用的了，但我们为了使用websock协议，还需要配置一下 打开v2ray的配置文件（/etc/v2ray/config.json）参照下面的进行配置。 只需在port和id这两个属性中填入你之前安装v2ray时记下来的值即可。（若需要CloudeFlare进行CDN转发，port则需要配置成CloudFlare支持的端口，在CloudFlare配置部分有详细说明） log配置是我后来加上的，不需要打日志的可以去掉。  { &amp;quot;log&amp;quot;: { &amp;quot;loglevel&amp;quot;: &amp;quot;debug&amp;quot;, &amp;quot;access&amp;quot;: &amp;quot;/var/log/v2ray/access.log&amp;quot;, &amp;quot;error&amp;quot;: &amp;quot;/var/log/v2ray/error.log&amp;quot; }, &amp;quot;inbounds&amp;quot;: [{ &amp;quot;port&amp;quot;: port, &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;, &amp;quot;settings&amp;quot;: { &amp;quot;clients&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;UUID&amp;quot;, &amp;quot;level&amp;quot;: 1, &amp;quot;alterId&amp;quot;: 64 } ] }, &amp;quot;streamSettings&amp;quot;:{ &amp;quot;wsSettings&amp;quot;:{ &amp;quot;path&amp;quot;:&amp;quot;/&amp;quot;, &amp;quot;headers&amp;quot;:{} }, &amp;quot;network&amp;quot;:&amp;quot;ws&amp;quot; } }], &amp;quot;outbounds&amp;quot;: [{ &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;, &amp;quot;settings&amp;quot;: {} },{ &amp;quot;protocol&amp;quot;: &amp;quot;blackhole&amp;quot;, &amp;quot;settings&amp;quot;: {}, &amp;quot;tag&amp;quot;: &amp;quot;blocked&amp;quot; }], &amp;quot;routing&amp;quot;: { &amp;quot;rules&amp;quot;: [ { &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;, &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;], &amp;quot;outboundTag&amp;quot;: &amp;quot;blocked&amp;quot; } ] } }  启动v2ray服务端  在控制台输入service v2ray start启动服务即可 v2ray服务端的配置到此完成，需要注意的是，如果是谷歌云、亚马逊云或者其他服务商的需要在防火墙放行v2ray服务的端口。  0x03 配置CloudFlare CDN 准备个人邮箱以及域名  上CloudFlare注册账号，添加域名，选择免费的套餐（每个CloudeFlare仅对一个域名提供免费服务） 将域名的DNS服务器修改为CloudFlare提供的DNS服务器（DNS服务器修改生效最长需要72小时） 在CloudFlare的DNS中添加解析记录（CDN解析生效需要稍等片刻）  需要注意的是：CloudFlare的端口转发仅限于以下端口（Cloudflare支持的 HTTP 端口为：80，8080，8880，2052，2082，2086，2095；Cloudflare 支持的 HTTPs 端口为：443，2053，2083，2087，2096，8443），所以v2ray服务端需要将端口修改成上面支持的端口。 另外，为了提高安全性，建议将Crypto的SSL选择为Full(Strict)模式。 有效性验证 在cmd中nslookup你的域名如(abc.</description>
    </item>
    
    <item>
      <title>MFC FormView中的OnInitialUpdate不调用</title>
      <link>http://blog.sinowrt.cn/2018/2018-12-11t1541-formview-oninitialupdate/</link>
      <pubDate>Tue, 11 Dec 2018 15:41:27 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-12-11t1541-formview-oninitialupdate/</guid>
      <description> 0x00 在Formview中的OnInitialUpdate中初始化了个自定义的按钮，但是运行无任何样式效果 0x01 在OnInitialUpdate里打了个断点再次运行，发现此方法根本未调用 0x02 在FormView Create后，手动调用OnInitialUpdate解决，如下所示 CWnd* pFrameWnd = this; CCreateContext pContext; pContext.m_pCurrentDoc = 0; pContext.m_pNewViewClass = RUNTIME_CLASS(View_OnlineShopManagement); View_OnlineShopManagement* pView = (View_OnlineShopManagement*)((CFrameWnd*)pFrameWnd)-&amp;gt;CreateView(&amp;amp;pContext); pView-&amp;gt;ShowWindow(SW_NORMAL); pView-&amp;gt;OnInitialUpdate(); //手动调用  </description>
    </item>
    
    <item>
      <title>MFC Dialog中嵌入Formview 初始化控件时m_hWnd为空</title>
      <link>http://blog.sinowrt.cn/2018/2018-12-11t1435-formview-m_hwnd/</link>
      <pubDate>Tue, 11 Dec 2018 14:35:00 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-12-11t1435-formview-m_hwnd/</guid>
      <description> 原因：在构造函数中进行控件的初始化 解决方法：Formview中，控件的初始化应该放在OnInitialUpdate中 </description>
    </item>
    
    <item>
      <title>MFC Dialog中嵌入Formview 0XC000041D:用户回调期间遇到未经处理的异常</title>
      <link>http://blog.sinowrt.cn/2018/2018-12-11t1430-formview-0xc000041d/</link>
      <pubDate>Tue, 11 Dec 2018 14:30:47 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-12-11t1430-formview-0xc000041d/</guid>
      <description>在填充Formview时，遇到0XC000041D:用户回调期间遇到未经处理的异常(已解决) 原因：HBRUSH hbr = OnCtlColor(pDC, pWnd, nCtlColor);这一句中应该在OnCtlColor前面添加命名空间:: 否则编译器会误解为递归函数 源码如下： #pragma once #include &amp;quot;NormalBtn.h&amp;quot; #include &amp;quot;resource.h&amp;quot; #include &amp;lt;Gdiplus.h&amp;gt; using namespace Gdiplus; // View_OnlineShopManagement 窗体视图 class View_OnlineShopManagement : public CFormView { DECLARE_DYNCREATE(View_OnlineShopManagement) protected: View_OnlineShopManagement(); // 动态创建所使用的受保护的构造函数 virtual ~View_OnlineShopManagement(); public: #ifdef AFX_DESIGN_TIME enum { IDD = IDD_FORMVIEW_OSM }; #endif #ifdef _DEBUG virtual void AssertValid() const; #ifndef _WIN32_WCE virtual void Dump(CDumpContext&amp;amp; dc) const; #endif #endif protected: virtual void DoDataExchange(CDataExchange* pDX); // DDX/DDV 支持 DECLARE_MESSAGE_MAP() public: virtual void OnInitialUpdate(); GdiplusStartupInput m_gdiplusStartupInput; ULONG_PTR m_gdiplusToken; afx_msg HBRUSH OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor); virtual void OnDraw(CDC* /*pDC*/); };  // View_OnlineShopManagement.</description>
    </item>
    
    <item>
      <title>Win10装光驱位硬盘分区不显示</title>
      <link>http://blog.sinowrt.cn/2018/2018-12-03t1258-hard-disk-parttion-unview/</link>
      <pubDate>Mon, 03 Dec 2018 12:58:57 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-12-03t1258-hard-disk-parttion-unview/</guid>
      <description> 0x00 前阵子用旧电脑装了个群晖nas，无奈用的120G硬盘，完全不够用，看手上还有个500G的三星机械盘，就买了个光驱硬盘盒，到手后插上电脑没显示分区？不兼容？盘坏了？ 0x01 打开设备管理器，扫描硬件更新，可以看到三星机械盘，盘和架子应该没问题 0x02 打开partition wizard,可以看到硬盘基本信息都在，就是没有盘符 0x03 分配盘符后，可以看到电脑显示分区正常，应该是没有挂载 0x04 也可以利用diskpart对卷进行挂载 0x05 Z盘挂载成功 </description>
    </item>
    
    <item>
      <title>Qt5 error LNK2019 无法解析的外部符号的解决方法</title>
      <link>http://blog.sinowrt.cn/2018/2018-11-17t1516-qt5compile-error/</link>
      <pubDate>Sat, 17 Nov 2018 15:16:56 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-11-17t1516-qt5compile-error/</guid>
      <description> 编译过程中连接错误 尝试删除build文件夹，问题解决 </description>
    </item>
    
    <item>
      <title>Windows 10安装Qt5.11.2</title>
      <link>http://blog.sinowrt.cn/2018/2018-11-17t1513-install-qt5-in-win10/</link>
      <pubDate>Sat, 17 Nov 2018 15:13:11 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-11-17t1513-install-qt5-in-win10/</guid>
      <description> 0x00背景 信管作业要求用C++实现进销存系统用户交互界面以及业务逻辑 0x01 必备安装包 1.qt-opensource-windows-x86-5.11.2.exe 2.Windows SDK 0x02 下载与安装 1.Qt下载与安装  上Qt下载页面下载你系统对应的安装包  我的是Windoes 10,直接下载qt-opensource-windows-x86-5.11.2.exe 直接打开qt-opensource-windows-x86-5.11.2.exe安装程序 在第一个界面直接下一步 填写账号这一块，如果没有事先申请也可以先跳过这一步  选择安装文件夹 选择编译器，由于我的电脑装了vs2015，所以直接选了MSVC 2015 64-bit（若未安装任何编译器可以直接选择MinGW 5.3.0 32bit）  接下来一路下一步即可  2.Windows SDK下载与安装  上Microsoft开发者下载站 我的系统是Windows 10，还是按自己的系统版本进行下载  下载之后得到这样一个exe，打开按步骤安装   0x03 配置Qt 1.配置Debugger  工具——选项——kits——Debuggers——Add 填写Debugger的名称 浏览WindowsSKD的安装路径，找到你所需要的Debugger，这里我设置了Windows 10的x64的和x86的cdb.exe 2.配置kit 按根据截图按需配置就可以了   到了这步配置基本完成，但是我在编译程序的过程中遇到error link1158 无法运行rc.exe的报错 error link1158 无法运行rc.exe问题解决方法  到C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0下的文件夹找到rc.dll和rc.exe复制到qmake文件夹下 qmake的路径可以参考截图   </description>
    </item>
    
    <item>
      <title>利用docker为群晖部署aria2下载工具</title>
      <link>http://blog.sinowrt.cn/2018/2018-11-06t0207-synologysetup-aria2-with-docker/</link>
      <pubDate>Tue, 06 Nov 2018 02:07:21 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-11-06t0207-synologysetup-aria2-with-docker/</guid>
      <description> 0x00 安装docker  在package center中的Third party找到docker 直接点击install进行安装  安装完毕，点击open即可打开docker
0x01 下载aria2映像 点击Registry选项卡，搜索aria2
 找到xujinkai那个下载下来 0x02 启动容器 点击image选项卡，点击launch进行启动 0x03 启动设置 点击Advance 1）Advance Setting 打上这两个√，设置开机自启动以及创建桌面快捷方式 2）Volume设置，添加这两项，前面的文件夹随便选，圈起来的位置务必一样 3）Port设置，为了方便使用，local port修改成您想要的端口 第一项为下载端口
 第二项为webui端口
 第三项为下载文件目录端口
  4）Environment设置 如图添加这两项，否则webui会报错，分别填写你的用户名和密码，ok 5）完成高级设置后，next 6）最后apply 7）打开浏览器，输入服务器地址以及你设置的webui端口，即可访问aria2 webui </description>
    </item>
    
    <item>
      <title>自定义黑群晖6.X.X引导系统版本</title>
      <link>http://blog.sinowrt.cn/2018/2018-11-04t1218-synalogycustomize-boot-system/</link>
      <pubDate>Sun, 04 Nov 2018 12:18:36 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-11-04t1218-synalogycustomize-boot-system/</guid>
      <description> 0x00 打开osfmount 0x01 挂载引导文件  选择img文件 填写offset为16MBytes 去掉read—only前面的勾 点击ok进行挂载   0x02 解压目标系统文件  将xxxxxxx.pat的后缀改成rar 解压 从解压得到的文件夹里面找到rd.gz和zlmage 复制这两个文件到虚拟磁盘根目录下替换原文件  0x03 卸载虚拟磁盘 0x04 将img文件通过Win32DiskImager写入U盘即可 </description>
    </item>
    
    <item>
      <title>旧笔记本安装黑群晖NAS系统——打造属于自己的私有云</title>
      <link>http://blog.sinowrt.cn/2018/2018-11-04t1148-synologynas-diy/</link>
      <pubDate>Sun, 04 Nov 2018 11:48:41 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-11-04t1148-synologynas-diy/</guid>
      <description>0x00 硬件条件 1.废旧的三星rv415笔记本电脑  CPU AMD Fusion APU E-450 RAM DDR3 2G 800MHz
2.SANDISK U盘 32G 一个  0x02 软件条件 1.群晖6.x.x引导文件 2.OSFmount 用于挂载引导镜像便于修改 3.Win32DiskImager 将引导文件写入U盘 4.群晖6.1-15047系统文件 5.群晖助手 0x03 网络拓扑 0x04 安装过程 1.安装之前建议先把硬盘格了再进行全新安装 2.制作引导系统 1）挂载img文件  安装osfmount 打开osfmount，对img文件进行挂载，如下所示   选择img文件 填写offset如图所示，选择单位KBytes 去掉read-only前面的勾 点击OK即挂载成功  2）查看U盘vid与pid  打开设备管理器，找到你的U盘  双击打开 打开详细信息选项卡，属性下拉选择硬件id，就可以直接看到vid与pid  3）修改img文件里的vid与pid  打开刚刚挂载成功的磁盘 用notepad++打开grub文件夹下的grub.cfg文件 修改第22行和23行的vid、pid为你U盘对应的数值  修改保存之后即可卸载刚刚挂载的设备
  4）打开Win32DiskImager将img文件写入U盘  选择刚刚修改好的img文件 点击写入即可  5）用网线将准备安装群晖系统的电脑连入局域网内 6）进入bios将你的电脑启动首选项设置为U盘启动  每台机器都不一样，大家可以google一下 要注意的是，这步很重要，到安装完成重启的过程中，没有选择U盘启动，而由硬盘启动的话，将会引导失败，出现联机失败的错误  7）打开群晖助手搜索局域网内的准备安装群晖系统的机器 * 右键安装，注意一定要选择跟版本号以及型号都一致的pat，否则会出错 * PS:6.</description>
    </item>
    
    <item>
      <title>用prism为WordPress页面实现代码高亮</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-20t1037-wordpresscode-highlight-with-prism/</link>
      <pubDate>Sat, 20 Oct 2018 10:37:42 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-20t1037-wordpresscode-highlight-with-prism/</guid>
      <description> 0x01 下载prism的css与js文件  在prism官网下载prism的css与js文件  0x02 ssh方式登陆服务器  在路径/wordpress/htdocs/wp-content/themes/你的主题名称/路径下创建prism文件夹 将prism.css与prism.js两个文件上传到prism文件夹中  0x03 修改functions.php  在/wordpress/htdocs/wp-content/themes/你的主题名称/下找到functions.php vi修改文件，添加以下语句：  function add_prism() { wp_register_style( &#39;prismCSS&#39;, get_stylesheet_directory_uri() . &#39;/prism/prism.css&#39; //自定义路径 ); wp_register_script( &#39;prismJS&#39;, get_stylesheet_directory_uri() . &#39;/prism/prism.js&#39; //自定义路径 ); wp_enqueue_style(&#39;prismCSS&#39;); wp_enqueue_script(&#39;prismJS&#39;); } add_action(&#39;wp_enqueue_scripts&#39;, &#39;add_prism&#39;);  0x04注意  get_stylesheet_directory_uri()与get_parent_theme_file_path( &#39;/inc/color-patterns.php&#39; )的区别 使用get_parent_theme_file_path( &#39;/prism/prism.css&#39; )语句之后发现页面代码高亮没生效 通过chrome F12调试 发现prism.css与prism.js没加载成功 细看发现请求路径不对劲 修改成get_stylesheet_directory_uri().&#39;/prism/prism.js&#39;之后代码高亮生效  </description>
    </item>
    
    <item>
      <title>newifi mini安装drcom全攻略</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-19t0256-drcom-setup-of-newifi_mini/</link>
      <pubDate>Fri, 19 Oct 2018 02:56:07 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-19t0256-drcom-setup-of-newifi_mini/</guid>
      <description>起始条件：  刷入breed的newifi mini一台 网线一根  后续部署  刷入pandorabox r355固件 配置无线名、密码 在/etc/opkg.conf后追加  arch all 100 arch ramips_24kec 200 arch ramips 300  离线安装python环境  分别下载  libgcc_4.8-linaro-1_ramips_24kec.ipk libc_0.9.33.2-1_ramips_24kec.ipk libpthread_0.9.33.2-1_ramips_24kec.ipk zlib_1.2.8-1_ramips_24kec.ipk libffi_3.0.13-1_ramips_24kec.ipk python-mini_2.7.3-2_ramips_24kec.ipk   将上述ipk放到tmp目录下 依次安装 安装完毕可以在putty中输入 python 以检验是否安装成功  安装drcom客户端  将drcom客户端的python脚本放入/usr/bin中（注意，此脚本为改动后的命令行脚本），将权限改为0755 输入python /usr/bin/drcom -u 你的账号 -p 你的密码，回车，在浏览器验证是否能成功登录上网  安装drcom_client可视化配置界面  复制drcom(etc_config)到括号中的路径，并去掉括号以及括号中的路径 复制drcom.lua(usr_lib_lua_luci_controller)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 复制drcom.lua(usr_lib_lua_luci_model_cbi)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 复制drcom.lua(usr-lib-lua-luci-model-cbi-admin_services)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 复制drcom_client(etc_init.d)到括号中的路径，并去掉括号以及括号中的路径，更改为0755权限 重启路由  配置drcom_client  进入luci管理界面 在服务中找到drcom_client单击进入 填入drcom的账号和密码 save&amp;amp;apply 打开浏览器打开任意网页验证是否登录成功  配置自启动  在/etc/hotplut.</description>
    </item>
    
    <item>
      <title>init.d 的 脚本中使用 kill 的怪事</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-17t0552-init.dkill/</link>
      <pubDate>Wed, 17 Oct 2018 05:52:17 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-17t0552-init.dkill/</guid>
      <description>2018.08.20 使用自动安装drcom的shell脚本之后，打开配置界面，进行认证之后，想起昨晚有那么一瞬间发现，在drcom的luci界面配置以及apply之后，ps -w会出现两条python drcom的进程，于是再次打开putty查看，果然不出所料，于是就有了这篇文章 #!/bin/sh /etc/rc.common run_drcom() { local username local password config_get username $1 username config_get password $1 password python /usr/bin/drcom -u $username -p $password &amp;amp; } start() { config_load drcom config_foreach run_drcom login } stop() { ps w | grep &amp;quot;.*drcom.*&amp;quot; | grep -v &#39;grep&#39; | cut -c 2-5 | xargs kill -9 echo &amp;quot;Drcom Client for GDUFE has stoped.&amp;quot; }   大二的时候，在写了drcom的luci界面之后，发现有时候使用drcom_client的stop命令会不奏效，经过查看代码，发现问题应该出在cut -c 2-5上
for example cut -c 2-5 是截取了第二到第五位的字符串 即4位pid 若pid大于4位之后便不再好使  我有印象当时已经改正了，这次出现的 drcom_client 脚本，便是原原本本的当年的模样，至于为什么会这样，可能当时我只改了路由器上的脚本，而没有更新本地脚本</description>
    </item>
    
    <item>
      <title>给宿舍装个智能锁吧（二）——指纹篇</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-17t0348-smartlock2/</link>
      <pubDate>Wed, 17 Oct 2018 03:48:52 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-17t0348-smartlock2/</guid>
      <description>2018/3/13  星期二晚上到货 取开发资料 浏览用户手册  2018/3/14  根据用户手册进行模块接线 接入串口，利用开发包中的上位机对指纹模块进行操作 用串口调试软件，输入相应的指令，进行指纹采集等操作，但进行相应的操作总是无法实现 原因：对原有指令进行了改造，而校验码并没有改变 对上位机软件进行改造，使其输出相应操作流程的指令
在OEMHostDlg.cpp中查找对应的按钮执行的内容 1.找到void COEMHostDlg::OnBtnVerify()
  void COEMHostDlg::OnBtnVerify() { int w_nRet, w_nTmplNo, w_nFpStatus, w_nLearned; DWORD w_dwTime; CString w_strTmp; UpdateData(TRUE); if (!CheckUserID()) return; EnableControl(FALSE); GetDlgItem(IDC_BTN_DISCONNECT)-&amp;gt;EnableWindow(FALSE); GetDlgItem(IDC_BTN_STOP)-&amp;gt;EnableWindow(TRUE); m_bCancel = FALSE; w_nTmplNo = m_nUserID; //. Check if fp is exist w_nRet = m_clsCommu.Run_GetStatus(w_nTmplNo, &amp;amp;w_nFpStatus); if( w_nRet != ERR_SUCCESS ) { m_strCmdResult = GetErrorMsg(w_nRet); goto l_exit; } if( w_nRet == ERR_SUCCESS &amp;amp;&amp;amp; w_nFpStatus == GD_TEMPLATE_EMPTY ) { m_strCmdResult = _T(&amp;quot;Template is empty&amp;quot;); goto l_exit; } m_clsCommu.</description>
    </item>
    
    <item>
      <title>ubuntu 16.04部署ss</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-16t1040-ubuntu/</link>
      <pubDate>Tue, 16 Oct 2018 10:40:36 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-16t1040-ubuntu/</guid>
      <description> 2018/04/06  准备部署亚马逊云的ss服务端，无意中看到有一张8刀的未付账单 经过查看账单详情，发现美国的俄亥俄州的服务器还没关闭，导致东京和美国的服务器同时开启，当然超出了亚马逊云的免费范围，所以对于国外的云服务器还是要定时上去查看一下，以防意外扣费的发生
 本篇主要是对ubuntu 16.04上部署ss服务端进行记录的的过程
  准备工作  利用putty的puttygen对亚马逊云派发的秘钥文件*.pem转换为putty能识别的ppk文件 启动putty，在ssh的auth中浏览文件夹选中刚才转换出来的ppk文件 填写服务器地址以及默认用户名ubuntu@ip地址 填写ssh端口22 若要进行ping检测，则需要在安全组中添加icmp入站规则 对该配置进行保存以便日后维护  正式部署  首先在终端输入sudo apt-get update 更新源 接着安装pip3，输入sudo apt install python3-pip 安装ss，输入sudo pip3 install shadowsocks 配置ss，输入sudo vi /etc/shadowsocks 在vi中输入ss的配置如下所示：  { &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;, &amp;quot;server_port&amp;quot;:444, &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;, &amp;quot;local_port&amp;quot;:1080, &amp;quot;password&amp;quot;:&amp;quot;mypasswd&amp;quot;, &amp;quot;timeout&amp;quot;:300, &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;, &amp;quot;fast_open&amp;quot;:false }  保存退出
 如果ss不是安装在/usr/bin或/usr/local/bin,要先查看ss的路径，输入whereis ssserver（故建议在安装ss前先cd /usr/bin）
 将查询到的路径复制，输入sudo vi /etc/sudoers，粘贴到secure_path后面，以冒号分隔强制保存退出即可
 最后输入sudo ssserver -c /etc/shadowsocks.json -d start &amp;amp;启动ss 服务即可用客户端进行连接
  </description>
    </item>
    
    <item>
      <title>给宿舍装个智能门锁吧（一）</title>
      <link>http://blog.sinowrt.cn/2018/2018-10-16t0811-smartlock/</link>
      <pubDate>Tue, 16 Oct 2018 08:11:56 +0000</pubDate>
      
      <guid>http://blog.sinowrt.cn/2018/2018-10-16t0811-smartlock/</guid>
      <description>初步部署 2018.1.27  舵机安装，用热熔胶将SG92R 9g小型舵机粘到门锁旁，舵机牵扯尼龙绳实现开锁动作 利用原有的papersignals固件对舵机开门的可行性进行测试，发现舵机在门锁有阻力的情况下，在舵机通电一刻仍能高效开锁 对该项目的架构进行构思  1.借鉴papersignals项目：  esp8266充当客户端，定时请求服务端获取json数据
 手机端发送请求到达服务端，服务端解析请求并修改本地json数据
 从而达到伪装实时开锁的目的  工作与过年原因项目搁置许久 2.构思内网穿透方案  利用pandorabox的可扩展性，安装内网穿透客户端ngrok
 在搬瓦工vps上安装ngrokd服务端
 抛弃papersignals的类似方式，将esp8266作为服务端，手机作为客户端 鉴于小程序的跨平台特性，决定采用小程序的方式进行手机端开发  在搬瓦工vps搭建ngrok服务端的过程  参考这篇博客在vps上进行ngrok的编译
 该博客中遇到的问题，我全都遇到了，按照相应的步骤操作即可解决 另外在go1.4安装操作步骤混乱的时候，造成goroot路径的错乱，从而无法安装上go1.4和go1.6，只需要unset GOROOT即可 一切安装就绪，卡在ngrok的go编译上，在编译过程中报错：go build project/test: signal: killed 查阅资料，发现是vps内存太小导致的无法编译 改用centos进行编译，但是只有visualbox的centos镜像，而visualbox复制文件上面完全比不上vmware方便，所以改用ubuntu进行ngrok编译。 在ubuntu中部署ngrok编译环境的时候，使用yum命令，发现yum是centos专用的安装命令，在ubuntu上使用会导致很多问题的发生，例如yum的源不知如何配置，所以用回apt命令 由于无法使用yum，造成很多依赖包无法安装上，所以无法安装上官网下载的go1.10包 查找资料发现可以使用sudo apt-get install go-lang命令直接安装go环境，若找不到直接apt update更新源即可 开启sslocal，把ngrok项目从git中拉下来 对ngrok项目进行编译 其中最重要的是$NGROK_DOMAIN的设置，在该教程中直接关系到openssl证书的生成 编译出ngrokd服务端 丢进vps中跑一下 问题：80端口和443端口的占用 解决：启动ngrok命令中修改-httpAddr以及httpsAddr 以更改监听端口，4443为透传接入端口，更改之后直接启动即可，在浏览器中输入www.sinowrt.cn:81 出现trunnel&amp;hellip;的即表示启动成功 编译出windows的客户端，windows的客户端必须要在cmd中才能运行，新建ngrok.cfg,将内容  server_addr: &amp;quot;www.sinowrt.cn:4443&amp;quot; trust_host_root_certs: false  写入该文件中，在cmd进入该目录，敲入命令
ngrok.exe -config=&amp;quot;ngrok.cfg&amp;quot; -subdomain=&amp;quot;abc&amp;quot; 80  连接上ngrok服务端即可将本地的80端口暴露出外网</description>
    </item>
    
  </channel>
</rss>