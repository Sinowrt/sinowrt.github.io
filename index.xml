<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sinowrt on Sinowrt</title>
    <link>http://blog.sinowrt.cn/</link>
    <description>Recent content in Sinowrt on Sinowrt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Jul 2020 12:31:00 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>python3.8 在安装 python-docx 时报错 Could not find function xmlCheckVersion in library libxml2. Is libxml2 installed?</title>
      <link>http://blog.sinowrt.cn/2020/2020-07-22t1231-could-not-find-function-xmlcheckversion-in-library-libxml2.-while-installing-python-docx/</link>
      <pubDate>Wed, 22 Jul 2020 12:31:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-07-22t1231-could-not-find-function-xmlcheckversion-in-library-libxml2.-while-installing-python-docx/</guid>
      <description>&lt;p&gt;因为Anaconda3的python环境在pyinstaller打包的时候，会把整个数学运算库打包进来，使整个程序体积达到300M以上，在分析程序运行时加载的动态链接库时，发现这些库在运行过程中都没有使用，虽然可以手动删除这些库，但是每次打包好了都要手动删除未免过于繁琐，所以打算把python切换一下，由于电脑里面之前已经安装了python3.8，所以只需要吧Anaconda3的环境取消激活就可以了。&lt;/p&gt;

&lt;p&gt;但是项目中所用到的一些包，都要重新安装一遍了。其中就包括python-docx这个模块，在安装的过程中报了&lt;code&gt;Could not find function xmlCheckVersion in library libxml2. Is libxml2 installed?&lt;/code&gt;这个错误。百度了一下，是缺少lxml引起的，需要到&lt;code&gt;https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml&lt;/code&gt;下载你所安装python版本的对应whl包，由于我的python是windows下的64位版本，于是我就下载了&lt;code&gt;lxml‑4.5.2‑cp38‑cp38‑win_amd64.whl&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;下载完成后，只需cd到该whl包的路径上，执行&lt;code&gt;pip install lxml‑4.5.2‑cp38‑cp38‑win_amd64.whl&lt;/code&gt;就可以了。但是在安装的过程中却又出了点状况，提示&lt;code&gt;lxml-4.5.2-cp38-cp38-win32.whl is not a supported wheel on this platform.&lt;/code&gt;，百度发现是包名有问题，在python控制台中输入&lt;code&gt;import pip._internal; print(pip._internal.pep425tags.get_supported())&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可以看到&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[(&#39;cp38&#39;, &#39;cp38m&#39;, &#39;win_amd64&#39;), (&#39;cp38&#39;, &#39;none&#39;, &#39;win_amd64&#39;), (&#39;py3&#39;, &#39;none&#39;, &#39;win_amd64&#39;), (&#39;cp38&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;cp3&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py38&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py3&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py37&#39;, &#39;none&#39;,
 &#39;any&#39;), (&#39;py36&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py35&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py34&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py33&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py32&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py31&#39;, &#39;none&#39;, &#39;any&#39;), (&#39;py30&#39;, &#39;none&#39;, &#39;any&#39;)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按照第一个参数可知，将文件名修改为&lt;code&gt;lxml‑4.5.2‑cp38‑cp38m‑win_amd64.whl&lt;/code&gt;即可&lt;/p&gt;

&lt;p&gt;修改后，在该包对应的路径中执行&lt;code&gt;pip install lxml‑4.5.2‑cp38‑cp38m‑win_amd64.whl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可以看到&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(newvenv) E:\checkDuplicate&amp;gt;pip install lxml-4.5.2-cp38-cp38m-win_amd64.whl
Processing e:\checkduplicate\lxml-4.5.2-cp38-cp38m-win_amd64.whl
Installing collected packages: lxml
Successfully installed lxml-4.5.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装成功。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Macbook Pro 2019使用感受</title>
      <link>http://blog.sinowrt.cn/2020/2020-06-10t1511-the-using-feeling-of-mbp/</link>
      <pubDate>Wed, 10 Jun 2020 14:27:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-06-10t1511-the-using-feeling-of-mbp/</guid>
      <description>&lt;p&gt;机器是今年年初买的，当时不想用公司的电脑，我就把神船带到公司当主力机。&lt;/p&gt;

&lt;p&gt;神船的性能是没得说的，但是这个重量(5kg)要背着上班通勤的话，我相信非习武之人绝对是承受不住的。&lt;/p&gt;

&lt;p&gt;于是我就打算将神船留在公司，可是回家就没电脑用了呀，而且身为IT人无论身在何处，随身携带电脑是我们光荣的使命。所以就萌发了购置macbook pro的想法。&lt;/p&gt;

&lt;p&gt;作为开发人员，16g内存是必选的，硬盘如果有条件还是建议512起步。但由于当时手头拮据，只选配了256的。新macbook pro在今年五月发布了，cpu 键盘 内存 硬盘 全线升级，如果上天再给我一次机会的话，我一定会等这四个月。&lt;/p&gt;

&lt;p&gt;使用macbook最直接的感受就是它超长的续航了，正常办公使用5h+没问题。而且随用随关，不用时只要把盖合上实属省心。&lt;/p&gt;

&lt;p&gt;现在我日常都是本地mac+远程win双端办公，只要有网络的地方都可以双端无缝切换，省心得很。&lt;/p&gt;

&lt;p&gt;macbook使用到现在也有小半年了，大问题没有，小问题比如说finder的远程服务器连接实属蹩脚，系统偶尔也会开小猜，不过重启都能解决问题。但是我这个人就是不喜欢重启电脑，只要不出问题，我宁愿它7x24不间断服务。&lt;/p&gt;

&lt;p&gt;前段时间还遇到了 macbook pro 2019 siri无法找到麦克风的问题，重启电脑即可解决。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Macbook Pro查看电池信息</title>
      <link>http://blog.sinowrt.cn/2020/2020-06-10t1427-how-to-query-the-information-of-battery-on-mac/</link>
      <pubDate>Wed, 10 Jun 2020 14:27:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-06-10t1427-how-to-query-the-information-of-battery-on-mac/</guid>
      <description>&lt;p&gt;在终端输入以下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ioreg -rn AppleSmartBattery | grep -i capacity
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;quot;AppleRawCurrentCapacity&amp;quot; = 4867
&amp;quot;AppleRawMaxCapacity&amp;quot; = 5084
&amp;quot;MaxCapacity&amp;quot; = 5084
&amp;quot;CurrentCapacity&amp;quot; = 4867
&amp;quot;LegacyBatteryInfo&amp;quot; = {&amp;quot;Amperage&amp;quot;=18446744073709551214,&amp;quot;Flags&amp;quot;=4,&amp;quot;Capacity&amp;quot;=5084,&amp;quot;Current&amp;quot;=4867,&amp;quot;Voltage&amp;quot;=12729,&amp;quot;Cycle Count&amp;quot;=46}
&amp;quot;DesignCapacity&amp;quot; = 5088
&amp;quot;BatteryData&amp;quot; = {&amp;quot;StateOfCharge&amp;quot;=96,&amp;quot;PMUConfigured&amp;quot;=0,&amp;quot;Voltage&amp;quot;=12699,&amp;quot;QmaxCell1&amp;quot;=5358,&amp;quot;AdapterPower&amp;quot;=839469241,&amp;quot;SystemPower&amp;quot;=1087516262,&amp;quot;ResScale&amp;quot;=117,&amp;quot;QmaxCell2&amp;quot;=5302,&amp;quot;QmaxCell0&amp;quot;=5341,&amp;quot;CycleCount&amp;quot;=46,&amp;quot;DesignCapacity&amp;quot;=5088}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>关闭chrome浏览器广告弹窗</title>
      <link>http://blog.sinowrt.cn/2020/2020-05-27t1334-remove-the-ad-windows-of-chrome/</link>
      <pubDate>Wed, 27 May 2020 13:34:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-05-27t1334-remove-the-ad-windows-of-chrome/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;之前用google进行调研的时候，点进去了一个网站
![]()
迫于打开心切，就点击了允许，之后时不时就会出现Bestdealfor10.life的弹窗，想要禁用，百度无果，使用google发现很多解决方法&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;随便挑一个&lt;a href=&#34;https://malwaretips.com/blogs/remove-bestdealfor10-life/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://malwaretips.com/blogs/remove-bestdealfor10-life/&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;按步骤，在chrome的设置-隐私和安全-网站设置-通知里面将&lt;a href=&#34;https://bestdealfor10.life&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://bestdealfor10.life&lt;/a&gt; 移除即可&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>优美的switch</title>
      <link>http://blog.sinowrt.cn/2020/2020-05-20t1507-javagorgeous-switch/</link>
      <pubDate>Wed, 20 May 2020 15:07:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-05-20t1507-javagorgeous-switch/</guid>
      <description>&lt;p&gt;相信大家都有这种体会，工作以来一直都是自己写代码，感觉自己的代码总是平平无奇，运行倒是能运行，就是没有那种让人眼前一亮的感觉。而每次阅读别人的源码，心里一直再默念，卧槽，还能这样写，天哪，太精辟了！&lt;/p&gt;

&lt;p&gt;于是，我就想，把这些让人眼前一亮的代码都摘录下来。一方面，自己能学习留痕，二来也能把这些知识分享给大家。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private static String createPlayer(PlayerTypes playerType) {
    return switch (playerType) {
        case TENNIS -&amp;gt; &amp;quot;网球运动员费德勒&amp;quot;;
        case FOOTBALL -&amp;gt; &amp;quot;足球运动员C罗&amp;quot;;
        case BASKETBALL,PINGPANG -&amp;gt; &amp;quot;牛逼运动员&amp;quot;;
        case UNKNOWN -&amp;gt; throw new IllegalArgumentException(&amp;quot;未知&amp;quot;);
    };
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外，代码的优化应该在保证业务正常运行的前提下进行，下面我讲一个有隐患的代码优化例子：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Map map=new HashMap(){{
    put(&amp;quot;key&amp;quot;,&amp;quot;value&amp;quot;);
}};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种写法，比起新建HashMap对象后再一个个put值，虽然是提高了代码的整体性，但是却存在着致命的缺陷，这也是我在搭地铁刷掘金时在一篇文章上看到的&lt;/p&gt;

&lt;p&gt;首先给出结论：这种写法会导致抛出OOM异常&lt;/p&gt;

&lt;p&gt;因为在new HashMap时，是调用了一个匿名内部类的put方法，而根据引用计数法，这个对象一直持有外部类的引用，导致该对象在GC时无法清除，埋下了OOM的隐患。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mac 安装flutter</title>
      <link>http://blog.sinowrt.cn/2020/2020-05-12t1531-how-to-install-flutter-on-mac/</link>
      <pubDate>Tue, 12 May 2020 15:07:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-05-12t1531-how-to-install-flutter-on-mac/</guid>
      <description>&lt;p&gt;首先从官网将flutter稳定版的压缩包下载下来，然后解压到一个目录中，
vi ~/.zshrc
添加以下一行
export PATH=/(解压flutter的路径)/flutter/bin:$PATH
保存然后source ~/.zshrc&lt;/p&gt;

&lt;p&gt;接下来flutter -h，却提示
&lt;code&gt;无法打开“Dart”，因为apple无法检查其是否包含恶意软件&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;输入以下命令回车（会提示输入密码）即可解决：
sudo spctl &amp;ndash;master-disable&lt;/p&gt;

&lt;p&gt;再次输入flutter -h验证是否生效&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>记一次生产环境 日期查询错误</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-21t1011-date-query-error-in-product-environment/</link>
      <pubDate>Tue, 21 Apr 2020 10:11:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-21t1011-date-query-error-in-product-environment/</guid>
      <description>&lt;p&gt;如图&lt;/p&gt;

&lt;p&gt;想查询4月1日到21日的记录，可是却连着3月31日的记录都查到了&lt;/p&gt;

&lt;p&gt;到后端查看日志，显示查询开始日期为31日16时，那么基本断定是时区出了问题&lt;/p&gt;

&lt;p&gt;那么有几种可能，一是系统时区，一是数据库时区，三是docker容器内部的时区&lt;/p&gt;

&lt;p&gt;第一步，&lt;code&gt;date -R&lt;/code&gt;查看系统时区输出&lt;code&gt;Tue, 21 Apr 2020 09:31:18 +0800&lt;/code&gt;,东八区，没问题&lt;/p&gt;

&lt;p&gt;那么第二步，查看数据库时区，登录mysql，&lt;code&gt;show variables like &amp;quot;%time_zone%&amp;quot;;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show variables like &amp;quot;%time_zone%&amp;quot;;
+------------------+--------+
| Variable_name    | Value  |
+------------------+--------+
| system_time_zone | UTC    |
| time_zone        | SYSTEM |
+------------------+--------+
2 rows in set (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;跟随系统，也没问题，需要注意的是，如果mysql是部署在docker中的话，就要进入容器内部更改容器内部的时区了&lt;/p&gt;

&lt;p&gt;保守起见，可以指定mysql的时区&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set global time_zone = &#39;+8:00&#39;;
set time_zone = &#39;+8:00&#39;;
set time_zone = &#39;+8:00&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次查看mysql时区，已经改变了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show variables like &amp;quot;%time_zone%&amp;quot;;
+------------------+--------+
| Variable_name    | Value  |
+------------------+--------+
| system_time_zone | UTC    |
| time_zone        | +08:00 |
+------------------+--------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一开始看了前面两个的时区后，发现都没问题，纳闷了好久，后来才想起服务是部署在docker的啊，于是输入&lt;code&gt;docker exec -it 容器ID bash&lt;/code&gt;进入容器&lt;/p&gt;

&lt;p&gt;输入&lt;code&gt;date -R&lt;/code&gt;,显示&lt;code&gt;Tue, 21 Apr 2020 01:40:28 +0000&lt;/code&gt;,终于找到原因了&lt;/p&gt;

&lt;p&gt;于是输入&lt;code&gt;cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/code&gt;,却提示
&lt;code&gt;cp: can&#39;t stat &#39;/usr/share/zoneinfo/Asia/Shanghai&#39;: No such file or directory&lt;/code&gt;，容器内部是没有这些时区文件的，那么就要从宿主机上面拷贝一份进来&lt;/p&gt;

&lt;p&gt;首先&lt;code&gt;mkdir -p /usr/share/zoneinfo/Asia&lt;/code&gt;创建文件夹&lt;/p&gt;

&lt;p&gt;再&lt;code&gt;ctrl+D&lt;/code&gt;退出容器，执行&lt;code&gt;docker cp /usr/share/zoneinfo/Asia/Shanghai d2e85b301fae:/usr/share/zoneinfo/Asia&lt;/code&gt;
再次进入容器，执行&lt;code&gt;cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/code&gt;即可&lt;/p&gt;

&lt;p&gt;可以通过&lt;code&gt;date -R&lt;/code&gt;进行验证，显示&lt;code&gt;Tue, 21 Apr 2020 01:42:18 +0800&lt;/code&gt;,大功告成&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker save 和 export 命令的区别</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-20t1611-the-differences-of-docker-command-save-and-export/</link>
      <pubDate>Mon, 20 Apr 2020 15:07:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-20t1611-the-differences-of-docker-command-save-and-export/</guid>
      <description>

&lt;p&gt;在一次生产环境 docker 微服务更新 中 深刻意识到docker save 和 export 的区别&lt;/p&gt;

&lt;h3 id=&#34;0x00-背景&#34;&gt;0x00 背景&lt;/h3&gt;

&lt;p&gt;上次使用虚拟机镜像部署了三个子系统，但是测试过程中还是发现了不少问题，所以这次需要过去更新几个微服务&lt;/p&gt;

&lt;p&gt;于是就在公司虚拟机里面用export命令把几个容器导出来，放到生产环境中再import进去，然后run，结果死活运行不起来，提示run缺少参数。为了防止这种情况，我还把公司测试环境中的完整的容器启动命令都拍了下来，然后尝试构造命令，没有参数是吧，我用inspect命令把参数都找出来。接下来参数是不缺了，就是提示在工作目录中找不到文件。&lt;/p&gt;

&lt;h3 id=&#34;0x01-分析&#34;&gt;0x01 分析：&lt;/h3&gt;

&lt;p&gt;在公司里面的容器，我是直接通过2375端口直接上传到docker镜像库的，在上传完毕后，还会执行dockerfile里面的命令，其中包含创建工作目录等命令。但是我将容器导入生产环境后，似乎是因为没有运行这些命令而造成找不到文件。&lt;/p&gt;

&lt;p&gt;那么就可以推理出，我只是将docker的容器导出来了，但是容器里面的数据却没有导出。&lt;/p&gt;

&lt;p&gt;怎样才能连同数据一起导出呢，那么就要用到save命令而不是export命令了。&lt;/p&gt;

&lt;h3 id=&#34;0x02-解决&#34;&gt;0x02 解决：&lt;/h3&gt;

&lt;p&gt;最后只能让同事再帮忙将这几个微服务的容器重新导出一下&lt;/p&gt;

&lt;p&gt;然后我这边再使用load命令将容器加载为镜像，微服务才得以成功更新。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>宿主机转发未开启导致无法访问docker内部网络</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-17t1702-can-not-access-the-nacos-service-in-docker-container/</link>
      <pubDate>Fri, 17 Apr 2020 17:02:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-17t1702-can-not-access-the-nacos-service-in-docker-container/</guid>
      <description>&lt;p&gt;今天迁移了虚拟机之后，准备上nacos改一下配置，可是登录http://&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;.&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;:8848/nacos却连接超时，telnet一下也不通，于是上部署了nacos的docker容器的宿主机上，curl &lt;a href=&#34;http://docker内网ip:8848/nacos&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://docker内网ip:8848/nacos&lt;/a&gt; 却是有返回数据的，那就确定应该是转发出了问题，&lt;/p&gt;

&lt;p&gt;sysctl -a | grep net.ipv4.ip_forward&lt;/p&gt;

&lt;p&gt;显示&lt;/p&gt;

&lt;p&gt;net.ipv4.ip_forward = 0&lt;/p&gt;

&lt;p&gt;原来是转发没开启，于是&lt;/p&gt;

&lt;p&gt;echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward&lt;/p&gt;

&lt;p&gt;sysctl -p 重新加载内核参数&lt;/p&gt;

&lt;p&gt;再telnet一下，通了搞定&lt;/p&gt;

&lt;p&gt;上http://&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;.&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;:8848/nacos进行配置就行了&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker容器迁移</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-16t1623-migrate-the-container-to-another-docker/</link>
      <pubDate>Thu, 16 Apr 2020 16:23:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-16t1623-migrate-the-container-to-another-docker/</guid>
      <description>&lt;p&gt;在项目部署的时候，本来是部署两个esxi虚拟机，但是在部署测试过程中发现对象存储服务依赖了另一个虚拟机的minio服务，由于该虚拟机的minio服务是部署在docker上的，所以打算将该容器迁移到要部署的其中一个虚拟机的docker中&lt;/p&gt;

&lt;p&gt;步骤：&lt;br /&gt;
1. 导出容器 &lt;code&gt;docker export 容器ID &amp;gt;minio.tar&lt;/code&gt;&lt;br /&gt;
2. 将导出minio.tar放到要部署的虚拟机上面&lt;br /&gt;
3. 将该容器导入镜像&lt;code&gt;docker import  minio.tar minio/minio:lastest&lt;/code&gt;&lt;br /&gt;
4. 新建容器并启动镜像&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d -p 9000:9000 --name minio -d -e &amp;quot;MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE&amp;quot; -e &amp;quot;MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&amp;quot; -v /mnt/data:/data -v /mnt/config:/root/.minio  minio/minio:lastest /usr/bin/docker-entrypoint.sh server /data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动命令可以在原宿主机上使用&lt;code&gt;docker inspect 容器ID&lt;/code&gt;查看，并根据需求调整启动参数&lt;/p&gt;

&lt;p&gt;至此，容器的迁移工作顺利完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>esxi web client导出虚拟机 中断 报网络错误</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-16t1619-esxi-network-error-while-exporting-esxi-virtual-machine/</link>
      <pubDate>Thu, 16 Apr 2020 16:19:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-16t1619-esxi-network-error-while-exporting-esxi-virtual-machine/</guid>
      <description>&lt;p&gt;今天使用esxi的web client导出虚拟机时，总是在导出到20G左右的时候中断，报网络异常，于是上vmware官网找有没有导出虚拟机的工具&lt;/p&gt;

&lt;p&gt;发现 &lt;a href=&#34;https://my.vmware.com/cn/web/vmware/details?downloadGroup=OVFTOOL430U2&amp;amp;productId=614&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;OVFTOOL&lt;/a&gt;这个小工具，点击链接下载下来（需要注册账号才能下载），安装&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开cmd进入安装文件夹，执行&lt;code&gt;ovftool.exe vi://用户名@esxi的ip/虚拟机名 K:/ovf&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果遇到 &lt;code&gt;Fault cause: vim.fault.InvalidState&lt;/code&gt; 错误，请确认虚拟机为关机状态&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;运行结果如下所示&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;C:\Program Files\VMware\VMware OVF Tool&amp;gt;ovftool.exe vi://root@***.***.***.***/docker K:/ovf
Enter login information for source vi://***.***.***.***/
Username: root
Password: ***********
Opening VI source: vi://root@***.***.***.***:443/docker
Opening VI source: vi://root@***.***.***.***:443/docker
Opening OVF target: K:/ovf
Writing OVF package: K:/ovf\docker\docker.ovf
Disk progress: 3%
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个小工具效果非常好，不用担心网络错误问题，进度也能看到，可以打9分&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>maven问题汇总</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-16t1023-problems-i-meet-while-using-maven/</link>
      <pubDate>Thu, 16 Apr 2020 10:23:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-16t1023-problems-i-meet-while-using-maven/</guid>
      <description>

&lt;h3 id=&#34;今天使用maven打包上传docker时-发现许多问题-就此记录一下&#34;&gt;今天使用maven打包上传docker时，发现许多问题，就此记录一下：&lt;/h3&gt;

&lt;p&gt;1.maven打包报多个main方法的问题&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:2.1.12.RELEASE:repackage (default) on project blade-electronic-library: Execution default of goal org.springframework.boot:spring-boot-maven-plugin:2.1.12.RELEASE:repackage failed: Unable to find a single main class from the following candidates [org.springblade.library.ElectronicLibraryApplication, org.springblade.library.controller.BookUploadController, org.springblade.library.utils.BookmarksUtils, org.springblade.library.utils.KeyContextUtils, org.springblade.library.service.impl.BookReadRankServiceImpl] -&amp;gt; [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn &amp;lt;goals&amp;gt; -rf :blade-electronic-library
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决办法：注释掉除了启动类main方法的其余所有main方法&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;2.打包某子模块的时候提示模块缺失&lt;/p&gt;

&lt;p&gt;将根模块依次进行clean compile package install后，再打包子模块&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;3.工程中引入别的模块时，由于在别的模块中定义了版本号property，导致无法引入模块的错误&lt;code&gt;Maven: Failed to read artifact descriptor&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;解决办法，在别的模块的工程中的pom.xml中找到该property，并在根模块添加该property，重新并打包&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;4.package | install | deploy的区别&lt;br /&gt;
* package命令完成了项目编译、单元测试、打包功能，但没有把打好的可执行jar包（war包或其它形式的包）布署到本地maven仓库和远程maven私服仓库&lt;br /&gt;
* install命令完成了项目编译、单元测试、打包功能，同时把打好的可执行jar包（war包或其它形式的包）布署到本地maven仓库，但没有布署到远程maven私服仓库&lt;br /&gt;
* deploy命令完成了项目编译、单元测试、打包功能，同时把打好的可执行jar包（war包或其它形式的包）布署到本地maven仓库和远程maven私服仓库&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Ubuntu]将ngrok添加到supervisor守护进程</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-12t2330-ubuntuadd-ngrok-to-supervisor/</link>
      <pubDate>Sun, 12 Apr 2020 23:33:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-12t2330-ubuntuadd-ngrok-to-supervisor/</guid>
      <description>

&lt;h2 id=&#34;0x00-安装supervis&#34;&gt;0x00 安装Supervis&lt;/h2&gt;

&lt;p&gt;直接执行以下命令即可安装Supervisor&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install supervisor 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;0x01-添加ngrok的supervisor配置&#34;&gt;0x01 添加ngrok的supervisor配置&lt;/h2&gt;

&lt;p&gt;进入supervisor配置目录,并新建ngrok.conf文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /etc/supervisor/conf.d
vi ngrok.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[program:ngrok]
directory = /usr/local/ngrok/
command = ngrokd -domain=&amp;quot;ngrok.******.cn&amp;quot; -httpAddr=&amp;quot;:80&amp;quot;
autostart = true     ; 在 supervisord 启动的时候也自动启动
startsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了
autorestart = true   ; 程序异常退出后自动重启
startretries = 3     ; 启动失败自动重试次数，默认是 3
user = root          ; 用哪个用户启动
redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false
stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB
stdout_logfile_backups = 20     ; stdout 日志文件备份数
stdout_logfile = /var/log/supervisor/ngrok.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;0x02-启动supervisor&#34;&gt;0x02 启动supervisor&lt;/h2&gt;

&lt;p&gt;重新加载配置，即可启动supervisor&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; supervisor reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看supervisor状态&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; supervisor status
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>npm 报错 EPERM: operation not permitted</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-10t1001-npm-eperm-operation-not-permitted/</link>
      <pubDate>Fri, 10 Apr 2020 10:01:00 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-10t1001-npm-eperm-operation-not-permitted/</guid>
      <description>&lt;p&gt;昨天从拉了个前端项目下来，用IDEA打开，例行npm install，安装到一般报错&lt;code&gt;EPERM: operation not permitted&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;按网上的删除package-lock.json后，情况依旧&lt;/p&gt;

&lt;p&gt;以为是管理员权限问题，于是&lt;code&gt;win + x&lt;/code&gt;再按&lt;code&gt;a&lt;/code&gt;调出powershell，进入项目目录，执行npm install，报&lt;code&gt;zlib: unexpected end of file&lt;/code&gt;，于是执行npm cache clean -force ，报错&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm ERR! The operation was rejected by your operating system.
npm ERR! It&#39;s possible that the file was already in use (by a text editor or antivirus),
npm ERR! or that you lack permissions to access it.
npm ERR!
npm ERR! If you believe this might be a permissions issue, please double-check the
npm ERR! permissions of the file and its containing directories, or try running
npm ERR! the command again as root/Administrator (though this is not recommended).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那我直接打开资源管理器，删除这个文件不就好了，可是删不掉啊，Access is denied，查看文件属性-安全-高级，Unable to display current owner. 连文件所属用户都看不到啊！&lt;/p&gt;

&lt;p&gt;后来我甚至登录Administrator账户，都删不了&lt;/p&gt;

&lt;p&gt;后来想了想，会不会是IDEA占用的问题呢，直接把IDEA关了，再&lt;code&gt;npm cache clean -force&lt;/code&gt;，提示npm-cache文件夹busy，命令提示行退出该目录，再执行一次，竟然好了？！&lt;/p&gt;

&lt;p&gt;然后&lt;code&gt;npm install&lt;/code&gt;，竟然一切正常？！跟我闹着玩呢？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>xxl-job 启动报异常 java.lang.NoClassDefFoundError: groovy/lang/GroovyClassLoader</title>
      <link>http://blog.sinowrt.cn/2020/2020-04-03t0853-xxl-job-groovyclassloader-noclassdeffounderror-exception/</link>
      <pubDate>Fri, 03 Apr 2020 08:53:27 +0800</pubDate>
      
      <guid>http://blog.sinowrt.cn/2020/2020-04-03t0853-xxl-job-groovyclassloader-noclassdeffounderror-exception/</guid>
      <description>&lt;p&gt;今天负责交接xxl-job数据同步系统，首先当然是将项目跑起来啦&lt;/p&gt;

&lt;p&gt;但是项目拉下来后，配置好，运行抛了个NoClassDefFoundError异常：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;xxlJobExecutor&#39; defined in class path resource [org/springblade/job/executor/config/XxlJobConfig.class]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: groovy/lang/GroovyClassLoader
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
    at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:847)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
    at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
    at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:140)
    at org.springblade.core.launch.BladeApplication.run(BladeApplication.java:49)
    at org.springblade.job.executor.JobApplication.main(JobApplication.java:34)
Caused by: java.lang.NoClassDefFoundError: groovy/lang/GroovyClassLoader
    at com.xxl.job.core.glue.GlueFactory.&amp;lt;init&amp;gt;(GlueFactory.java:36)
    at com.xxl.job.core.glue.GlueFactory.&amp;lt;clinit&amp;gt;(GlueFactory.java:20)
    at com.xxl.job.core.executor.impl.XxlJobSpringExecutor.afterPropertiesSet(XxlJobSpringExecutor.java:39)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767)
    ... 16 common frames omitted
Caused by: java.lang.ClassNotFoundException: groovy.lang.GroovyClassLoader
    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    ... 21 common frames omitted


Process finished with exit code 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加如下依赖，问题解决&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.codehaus.groovy&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;groovy-all&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.5.2&amp;lt;/version&amp;gt;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>